    var upColor = '#607D8B';
    var downColor = '#EF5350';

    // var upColor = '#66BB6A';
    // var downColor = '#FF7043';
    var upColorBorder = upColor;
    var downColorBorder = downColor;

    //定义K线图模板
    export var option = {
        backgroundColor: '#fff',
        animation: false,
        legend: {
            top: 10,
            left: 'center',
            data: ['Dow-Jones index']
        },
        tooltip: {
            trigger: 'axis',
            axisPointer: {
                type: 'cross'
            },
            backgroundColor: 'rgba(245, 245, 245, 0.8)',
            borderWidth: 1,
            borderColor: '#ccc',
            padding: 10,
            textStyle: {
                color: '#000'
            },
            position: function (pos, params, el, elRect, size) {
                var obj = {top: 10};
                obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 30;
                return obj;
            }
            // extraCssText: 'width: 170px'
        },
        axisPointer: {
            link: {xAxisIndex: 'all'},
            label: {
                backgroundColor: '#777'
            }
        },
        toolbox: {
            feature: {
                dataZoom: {
                    yAxisIndex: false
                },
                brush: {
                    type: ['lineX', 'clear']
                }
            }
        },
        brush: {
            xAxisIndex: 'all',
            brushLink: 'all',
            outOfBrush: {
                colorAlpha: 0.1
            }
        },
        visualMap: {
            show: false,
            seriesIndex: 5,
            dimension: 2,
            pieces: [{
                value: 1,
                color: downColor
            }, {
                value: -1,
                color: upColor
            }]
        },
        grid: [
            {
                left: '80',
                right: '2%',
                height: '56%'
            },
            {
                left: '80',
                right: '2%',
                top: '80%',
                height: '10%'
            }
        ],
        xAxis: [
            {
                type: 'category',
                data: 0,
                scale: true,
                boundaryGap: false,
                axisLine: {onZero: false ,lineStyle: { color: '#8392A5' }},
                splitLine: {show: false},
                splitNumber: 20,
                min: 'dataMin',
                max: 'dataMax',
                axisPointer: {
                    z: 100
                }
            },
            {
                type: 'category',
                gridIndex: 1,
                data: 0,
                scale: true,
                boundaryGap: false,
                axisLine: {onZero: false, lineStyle: { color: '#8392A5' }},
                axisTick: {show: false},
                splitLine: {show: false},
                axisLabel: {show: false},
                splitNumber: 20,
                min: 'dataMin',
                max: 'dataMax'
            }
        ],
        yAxis: [
            {   //主图
                scale: true,
                gridIndex:0,
                splitArea: {
                    show: true
                },
                axisLabel: {
                formatter: '{value}'
                },
                axisLine: {show: true, lineStyle: { color: '#8392A5' }}
            },
            {   //副图
                scale: true,
                gridIndex: 1,
                splitNumber: 2,
                axisLabel: {show: true},
                axisLine: {show: true, lineStyle: { color: '#8392A5' }},
                axisTick: {show: true},
                splitLine: {show: true}
            }
        ],
        dataZoom: [
            {
                type: 'inside',
                xAxisIndex: [0, 1],
                start: 0,
                end: 100
            },
            {
                type: 'slider',
                dataBackgroundColor: '#eceff1',
                fillerColor: 'rgba(96,125,139,0.1)',   // 填充颜色
                borderColor:"#ddd", //边框颜色。
                realtime: true,
                height: 30,
                handleColor: '#607D8B',
                handleSize: 30,
                show: true,
                xAxisIndex: [0, 1],
                top: '92%',
                start: 0,
                end: 100
            }
        ],
        series: []
    };

    //解析K线数据，将其转化成{ x轴,
    //                       股价（最高、最低、开盘、收盘）,
    //                       量能}
    export function splitData(rawData) {
            var categoryData = [];
            var values = [];
            var volumes = [];
            for (var i = 0; i < rawData.length; i++) {
                categoryData.push(rawData[i].splice(0, 1)[0]);
                values.push(rawData[i]);
                volumes.push([i, rawData[i][4], rawData[i][0] > rawData[i][1] ? 1 : -1]); //交易量能
            }

            return {
                categoryData: categoryData,
                values: values,
                volumes: volumes
            };
    }

    export function splitDataByType(rawData,isPercent) {
            var categoryData = [];
            var values = [];
            var volumes = [];
            if(false == isPercent)
            {   //只有一个股票时，显示股价蜡烛图
                for (var i = 0; i < rawData.length; i++) {
                    categoryData.push(rawData[i].splice(0, 1)[0]);
                    values.push(rawData[i]);
                    volumes.push([i, rawData[i][4], rawData[i][0] > rawData[i][1] ? 1 : -1]); //交易量能
                }
            }
            else
            {   //多股同列时,显示收盘价相对于第一天开盘价的百分比折线图
                var basicValue=rawData[0][1]; //第一天的开盘价作为基准价
                for (var i = 0; i < rawData.length; i++) {
                    var time = rawData[i][0];
                    categoryData.push(rawData[i].splice(0, 1)[0]);
                    volumes.push([i, rawData[i][4], rawData[i][0] > rawData[i][1] ? 1 : -1]); //交易量能
                    values.push([String(time), (rawData[i][1]-basicValue)*100/basicValue]);   //收盘价相对于第一天开盘价的涨幅
                }
            }

            return {
                categoryData: categoryData,
                values: values,
                volumes: volumes
            };
    }

    export function calculateMA(dayCount, data) {
            var result = [];
            for (var i = 0, len = data.values.length; i < len; i++) {
                if (i < dayCount) {
                    result.push('-');
                    continue;
                }
                var sum = 0;
                for (var j = 0; j < dayCount; j++) {
                    sum += data.values[i - j][1];
                }
                result.push(+(sum / dayCount).toFixed(3));
            }
            return result;
    }

    export function setXAxisData(option, xAxisData)
    {
         option.xAxis[0].data = xAxisData;
         option.xAxis[1].data = xAxisData;
    }

    export function attachStockData(option, dataName, codeData)
   {    //1,添加蜡烛图k线 （当前它只显示在第一个x,y轴上）
       var upColor = '#607D8B';
        var downColor = '#EF5350';
        var upColorBorder = upColor;
        var downColorBorder = downColor;
        var candlestickItem = {
                        name: dataName,
                        type: 'candlestick',
                        data: codeData.values,
                        itemStyle: {
                                        color: '#607D8B',
                                        color0: '#EF5350',
                                        borderColor: upColorBorder,
                                        borderColor0: downColorBorder
                                    },
                        //////////////////////////////////////
                        markPoint: {
                                    label: {
                                                normal: {
                                                    formatter: function (param)
                                                            {
                                                                return param != null ? Math.round(param.value) : '';
                                                            }
                                                        }
                                            },
                                    data: [

                                        ]
                                    },
                        /////////////////////////////////////
                        tooltip: {
                            formatter: function (param) {
                                param = param[0];
                                return [
                                    'Date: ' + param.name + '<hr size=1 style="margin: 3px 0">',
                                    'Open: ' + param.data[0] + '<br/>',
                                    'Close: ' + param.data[1] + '<br/>',
                                    'Lowest: ' + param.data[2] + '<br/>',
                                    'Highest: ' + param.data[3] + '<br/>'
                                ].join('');
                            }
                        }
                    };
        option.series.push(candlestickItem);

        //2,设置均线
        var maItemsType=[5,10,20,30];
        for(var i=0; i<maItemsType.length; i++)
        {
            var maItem = {
                        name: maItemsType[i].toString(),
                        type: 'line',
                        data: calculateMA(maItemsType[i], codeData),
                        smooth: true,
                        lineStyle: {
                            opacity: 0.5
                        }
                    };
            option.series.push(maItem);
        }
        //3,设置量能副图
        var volumesItem = {
                        name: 'Volume',
                        type: 'bar',
                        xAxisIndex: 1,
                        yAxisIndex: 1,
                        data: codeData.volumes
                    };
        option.series.push(volumesItem);
   }

    export function attachLineData(option, dataName, xAxisDatas, data, yIndexShow)
    {   //添加简单的折线
        var newData = [];
        var lineColor = ["#80E12A","#FFB6C1","#DA70D6","#828282","#43DAFF"]
        for (var i = 0; i < data.length; i++)
        {

            for(var j=0; j<(xAxisDatas.length-1);j++)
            {
                if(xAxisDatas[j]==data[i][0] ||
                    (xAxisDatas[j]<data[i][0] && xAxisDatas[j+1]>data[i][0]))
                    {
                       newData.push([String(xAxisDatas[j]), data[i][1]]);
                       break;
                       //newData.push( data[i][1]);
                    }
            }
        }

        var yIndex = addYAxis(option, yIndexShow);
        var item = {
                        name: dataName,
                        type: 'line',
                        xAxisIndex: 0,
                        yAxisIndex: yIndex,
                        data: newData,
                        smooth: false,
                        symbol:'circle',
                        symbolSize:10,
                        lineStyle: {
                            width:2,
                            type: 'solid',
                            color: lineColor[yIndex] //折线的颜色
                        },
                   };
        option.legend.data.push(dataName)
        option.series.push(item);
    }

    export function attachStockLineData(option, dataName, codeData, lineIndex)
    {    //为股票添加简单的折线
        var lineColor = ["#80E12A","#FFB6C1","#DA70D6","#828282","#43DAFF"]
        var item = {
                        name: dataName,
                        type: 'line',
                        xAxisIndex: 0,
                        yAxisIndex: 0,
                        data: codeData,
                        smooth: false,
                        symbol:'circle',
                        symbolSize:10,
                        lineStyle: {
                            width:2,
                            type: 'solid',
                            color: lineColor[lineIndex] //折线的颜色
                        },
                   };
        option.legend.data.push(dataName)
        option.series.push(item);
    }

    export function  addYAxis(option, isShow)
    {
       var itemShow = {
                    scale: true,
                    gridIndex:0,
                    position: "right",
                    "axisLine":{       //y轴
                      "show":true
                    },
                    "axisTick":{       //y轴刻度线
                      "show":true
                    }
                   };

       var itemHide = {
                    scale: true,
                    gridIndex:0,
                    position: "right",
                    "axisLine":{       //y轴
                      "show":false
                    },
                    "axisTick":{       //y轴刻度线
                      "show":false
                    },
                    axisLabel : {
                        formatter: function(){
                              return "";
                        }
                   }
            };
       if(isShow)
       {
       option.yAxis.push(itemShow);
       }
       else
       {
       option.yAxis.push(itemHide);
       }

       return (option.yAxis.length-1);
    }


    export function resetSeriesData(option)
    {
            option.series.splice(0, option.series.length);
            option.yAxis.splice(2, option.yAxis.length-2);
            //option.legend.data.splice(0, option.legend.data.length);
    }

    export function resetMacroData(option)
    {
        if(option.series.length>6)
        {
            option.series.splice(6, option.series.length-5);
            option.yAxis.splice(2, option.yAxis.length-2);
            option.legend.data.splice(5, option.legend.data.length-5);
        }
    }

    export function makePoints(option, baseData, macroData)
    {
        for (var i = 0; i < macroData.length; i++)
        {
            for(var j=0; j<(baseData.categoryData.length-1);j++)
            {
                if(baseData.categoryData[j]==macroData[i][0] ||
                    (baseData.categoryData[j]<macroData[i][0] && baseData.categoryData[j+1]>macroData[i][0]))
                    {
                       var item={
                                  name: i,
                                   coord: [String(baseData.categoryData[j]), baseData.values[j][0]],
                                   value: macroData[i][1],
                                   itemStyle: {
                                       color: 'rgb(41,60,85)'
                                              }
                              };
                               option.series[0].markPoint.data.push(item);
                    }
            }
        }
    }
