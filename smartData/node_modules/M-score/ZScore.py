#!/usr/bin/python
# -*- coding: UTF-8 -*-
import pandas as pd
import Mylog
import Math

#range1: <1.81 maybe bankrupt, range2:1.81~3 uncertain, range3: >3 Good.
def check_ZScore(df_ZScore, df_Zstat):

    for index, row in df_ZScore.iterrows():
        if row['ZScore'] <= 1.81:
            df_Zstat.loc[df_Zstat['year'] == int(row['end_date'][0:4]), 'range1'] += 1
            Mylog.MyLogger.warning('%s_%s ZScore is <= 1.81, maybe bankrupt' % (row['ts_code'], row['end_date']))
        elif 1.81 < row['ZScore'] <= 3:
            df_Zstat.loc[df_Zstat['year'] == int(row['end_date'][0:4]), 'range2'] += 1
            Mylog.MyLogger.warning('%s_%s ZScore is in [-2.2,-1]. uncertain' % (row['ts_code'], row['end_date']))
        elif 3 < row['ZScore']:
            df_Zstat.loc[df_Zstat['year'] == int(row['end_date'][0:4]), 'range3'] += 1
            Mylog.MyLogger.warning('%s_%s ZScore is in [-1,0]. Good' % (row['ts_code'], row['end_date']))
    return

def cal_ZScore(pro, ts_code):
    df_IS = pro.income(ts_code=ts_code, start_date='19900101', end_date='20200603',
                    fields='ts_code,f_ann_date,end_date,total_revenue,revenue,ebit')

    df_BS = pro.balancesheet(ts_code=ts_code, start_date='19900101', end_date='20200603',
                          fields='ts_code,f_ann_date,end_date,total_cur_assets,total_cur_liab,total_assets,total_liab,'
                                 'total_hldr_eqy_inc_min_int,undistr_porfit,surplus_rese')

    df_IS = df_IS[df_IS['end_date'].str.contains('1231')]
    df_IS.drop_duplicates(subset=['end_date'], keep='first', inplace=True)
    df_IS.fillna(value=0, inplace=True)
    df_IS.reset_index(drop=True, inplace=True)

    df_BS = df_BS[df_BS['end_date'].str.contains('1231')]
    df_BS.drop_duplicates(subset=['end_date'], keep='first', inplace=True)
    df_BS.fillna(value=0, inplace=True)
    df_BS.reset_index(drop=True, inplace=True)

    x1 = []    # X1 = 净营运资本 / 总资产 = （流动资产— 流动负债） / 总资产
    x2 = []    # X2 = 留存收益 / 总资产
    x3 = []    # X3 =息税前收益/ 总资产 = （利润总额+财务费用） / 总资产
    x4 = []    # X4 = 优先股和普通股市值 /总负债= （股票市值 * 股票总数） / 总负债
    x5 = []    # X5 = 销售额 / 总资产

    for index in range(min(len(df_IS), len(df_BS))):
        x1.append(Math.div((df_BS.iloc[index].at['total_cur_assets']-df_BS.iloc[index].at['total_cur_liab']), df_BS.iloc[index].at['total_assets']))
        x2.append(Math.div(df_BS.iloc[index].at['undistr_porfit'], df_BS.iloc[index].at['total_assets']))
        x3.append(Math.div(df_IS.iloc[index].at['ebit'], df_BS.iloc[index].at['total_assets']))
        x4.append(Math.div(df_BS.iloc[index].at['total_hldr_eqy_inc_min_int'], df_BS.iloc[index].at['total_liab']))
        x5.append(Math.div(df_IS.iloc[index].at['total_revenue'], df_BS.iloc[index].at['total_assets']))

    # Z =1.2X1 + 1.4X2 +3.3X3 + 0.6X4 + 0.999X5
    df_ZScore = pd.DataFrame(index=range(len(x1)),columns=['ts_code', 'end_date', 'x1', 'x2', 'x3', 'x4', 'x5','ZScore'])
    df_ZScore['ts_code'] = df_BS['ts_code']
    df_ZScore['end_date'] = df_BS['end_date']
    df_ZScore['x1'] = x1
    df_ZScore['x2'] = x2
    df_ZScore['x3'] = x3
    df_ZScore['x4'] = x4
    df_ZScore['x5'] = x5

    df_ZScore['ZScore'] = df_ZScore.apply(lambda x: 1.2 * x['x1'] + 1.4 * x['x2'] + 3.3 * x['x3'] + 0.6 * x['x4'] + 0.999 * x['x5'], axis=1)

    return(df_ZScore)

if __name__ == "__main__":
    cal_ZScore()